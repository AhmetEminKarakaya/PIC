

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Sat Jul 31 12:25:23 2021

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og1 
     1                           	processor	16F877A
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     6                           	psect	maintext,global,class=CODE,split=1,delta=2
     7                           	psect	text1,local,class=CODE,merge=1,delta=2
     8                           	psect	text2,local,class=CODE,merge=1,delta=2
     9                           	psect	text3,local,class=CODE,merge=1,delta=2
    10                           	psect	intentry,global,class=CODE,delta=2
    11                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    12                           	dabs	1,0x7E,2
    13  0000                     
    14                           ; Version 2.20
    15                           ; Generated 12/02/2020 GMT
    16                           ; 
    17                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    18                           ; All rights reserved.
    19                           ; 
    20                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    21                           ; 
    22                           ; Redistribution and use in source and binary forms, with or without modification, are
    23                           ; permitted provided that the following conditions are met:
    24                           ; 
    25                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    26                           ;        conditions and the following disclaimer.
    27                           ; 
    28                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    29                           ;        of conditions and the following disclaimer in the documentation and/or other
    30                           ;        materials provided with the distribution.
    31                           ; 
    32                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    33                           ;        software without specific prior written permission.
    34                           ; 
    35                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    36                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    37                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    38                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    39                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    40                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    41                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    42                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    43                           ; 
    44                           ; 
    45                           ; Code-generator required, PIC16F877A Definitions
    46                           ; 
    47                           ; SFR Addresses
    48  0000                     	;# 
    49  0001                     	;# 
    50  0002                     	;# 
    51  0003                     	;# 
    52  0004                     	;# 
    53  0005                     	;# 
    54  0006                     	;# 
    55  0007                     	;# 
    56  0008                     	;# 
    57  0009                     	;# 
    58  000A                     	;# 
    59  000B                     	;# 
    60  000C                     	;# 
    61  000D                     	;# 
    62  000E                     	;# 
    63  000E                     	;# 
    64  000F                     	;# 
    65  0010                     	;# 
    66  0011                     	;# 
    67  0012                     	;# 
    68  0013                     	;# 
    69  0014                     	;# 
    70  0015                     	;# 
    71  0015                     	;# 
    72  0016                     	;# 
    73  0017                     	;# 
    74  0018                     	;# 
    75  0019                     	;# 
    76  001A                     	;# 
    77  001B                     	;# 
    78  001B                     	;# 
    79  001C                     	;# 
    80  001D                     	;# 
    81  001E                     	;# 
    82  001F                     	;# 
    83  0081                     	;# 
    84  0085                     	;# 
    85  0086                     	;# 
    86  0087                     	;# 
    87  0088                     	;# 
    88  0089                     	;# 
    89  008C                     	;# 
    90  008D                     	;# 
    91  008E                     	;# 
    92  0091                     	;# 
    93  0092                     	;# 
    94  0093                     	;# 
    95  0094                     	;# 
    96  0098                     	;# 
    97  0099                     	;# 
    98  009C                     	;# 
    99  009D                     	;# 
   100  009E                     	;# 
   101  009F                     	;# 
   102  010C                     	;# 
   103  010D                     	;# 
   104  010E                     	;# 
   105  010F                     	;# 
   106  018C                     	;# 
   107  018D                     	;# 
   108  0000                     	;# 
   109  0001                     	;# 
   110  0002                     	;# 
   111  0003                     	;# 
   112  0004                     	;# 
   113  0005                     	;# 
   114  0006                     	;# 
   115  0007                     	;# 
   116  0008                     	;# 
   117  0009                     	;# 
   118  000A                     	;# 
   119  000B                     	;# 
   120  000C                     	;# 
   121  000D                     	;# 
   122  000E                     	;# 
   123  000E                     	;# 
   124  000F                     	;# 
   125  0010                     	;# 
   126  0011                     	;# 
   127  0012                     	;# 
   128  0013                     	;# 
   129  0014                     	;# 
   130  0015                     	;# 
   131  0015                     	;# 
   132  0016                     	;# 
   133  0017                     	;# 
   134  0018                     	;# 
   135  0019                     	;# 
   136  001A                     	;# 
   137  001B                     	;# 
   138  001B                     	;# 
   139  001C                     	;# 
   140  001D                     	;# 
   141  001E                     	;# 
   142  001F                     	;# 
   143  0081                     	;# 
   144  0085                     	;# 
   145  0086                     	;# 
   146  0087                     	;# 
   147  0088                     	;# 
   148  0089                     	;# 
   149  008C                     	;# 
   150  008D                     	;# 
   151  008E                     	;# 
   152  0091                     	;# 
   153  0092                     	;# 
   154  0093                     	;# 
   155  0094                     	;# 
   156  0098                     	;# 
   157  0099                     	;# 
   158  009C                     	;# 
   159  009D                     	;# 
   160  009E                     	;# 
   161  009F                     	;# 
   162  010C                     	;# 
   163  010D                     	;# 
   164  010E                     	;# 
   165  010F                     	;# 
   166  018C                     	;# 
   167  018D                     	;# 
   168  0000                     	;# 
   169  0001                     	;# 
   170  0002                     	;# 
   171  0003                     	;# 
   172  0004                     	;# 
   173  0005                     	;# 
   174  0006                     	;# 
   175  0007                     	;# 
   176  0008                     	;# 
   177  0009                     	;# 
   178  000A                     	;# 
   179  000B                     	;# 
   180  000C                     	;# 
   181  000D                     	;# 
   182  000E                     	;# 
   183  000E                     	;# 
   184  000F                     	;# 
   185  0010                     	;# 
   186  0011                     	;# 
   187  0012                     	;# 
   188  0013                     	;# 
   189  0014                     	;# 
   190  0015                     	;# 
   191  0015                     	;# 
   192  0016                     	;# 
   193  0017                     	;# 
   194  0018                     	;# 
   195  0019                     	;# 
   196  001A                     	;# 
   197  001B                     	;# 
   198  001B                     	;# 
   199  001C                     	;# 
   200  001D                     	;# 
   201  001E                     	;# 
   202  001F                     	;# 
   203  0081                     	;# 
   204  0085                     	;# 
   205  0086                     	;# 
   206  0087                     	;# 
   207  0088                     	;# 
   208  0089                     	;# 
   209  008C                     	;# 
   210  008D                     	;# 
   211  008E                     	;# 
   212  0091                     	;# 
   213  0092                     	;# 
   214  0093                     	;# 
   215  0094                     	;# 
   216  0098                     	;# 
   217  0099                     	;# 
   218  009C                     	;# 
   219  009D                     	;# 
   220  009E                     	;# 
   221  009F                     	;# 
   222  010C                     	;# 
   223  010D                     	;# 
   224  010E                     	;# 
   225  010F                     	;# 
   226  018C                     	;# 
   227  018D                     	;# 
   228  0006                     _PORTBbits	set	6
   229  000B                     _INTCONbits	set	11
   230  0006                     _PORTB	set	6
   231  0086                     _TRISB	set	134
   232                           
   233                           	psect	cinit
   234  000F                     start_initialization:	
   235                           ; #config settings
   236                           
   237  000F                     __initialization:
   238  000F                     end_of_initialization:	
   239                           ;End of C runtime variable initialization code
   240                           
   241  000F                     __end_of__initialization:
   242  000F  0183               	clrf	3
   243  0010  120A  118A  2856   	ljmp	_main	;jump to C main() function
   244                           
   245                           	psect	cstackCOMMON
   246  0070                     __pcstackCOMMON:
   247  0070                     ?_init_configbits:
   248  0070                     ?_ei_portb:	
   249                           ; 1 bytes @ 0x0
   250                           
   251  0070                     ?_port_interrupt:	
   252                           ; 1 bytes @ 0x0
   253                           
   254  0070                     ??_port_interrupt:	
   255                           ; 1 bytes @ 0x0
   256                           
   257  0070                     ?_main:	
   258                           ; 1 bytes @ 0x0
   259                           
   260                           
   261                           ; 2 bytes @ 0x0
   262  0070                     	ds	5
   263  0075                     ??_init_configbits:
   264  0075                     ??_ei_portb:	
   265                           ; 1 bytes @ 0x5
   266                           
   267  0075                     ??_main:	
   268                           ; 1 bytes @ 0x5
   269                           
   270                           
   271                           	psect	maintext
   272  0056                     __pmaintext:	
   273                           ; 1 bytes @ 0x5
   274 ;;
   275 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   276 ;;
   277 ;; *************** function _main *****************
   278 ;; Defined at:
   279 ;;		line 44 in file "mainn.c"
   280 ;; Parameters:    Size  Location     Type
   281 ;;		None
   282 ;; Auto vars:     Size  Location     Type
   283 ;;		None
   284 ;; Return value:  Size  Location     Type
   285 ;;                  2   30[None  ] int 
   286 ;; Registers used:
   287 ;;		wreg, status,2, status,0, pclath, cstack
   288 ;; Tracked objects:
   289 ;;		On entry : B00/0
   290 ;;		On exit  : 0/0
   291 ;;		Unchanged: 0/0
   292 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   293 ;;      Params:         0       0       0       0       0
   294 ;;      Locals:         0       0       0       0       0
   295 ;;      Temps:          0       0       0       0       0
   296 ;;      Totals:         0       0       0       0       0
   297 ;;Total ram usage:        0 bytes
   298 ;; Hardware stack levels required when called: 2
   299 ;; This function calls:
   300 ;;		_ei_portb
   301 ;;		_init_configbits
   302 ;; This function is called by:
   303 ;;		Startup code after reset
   304 ;; This function uses a non-reentrant model
   305 ;;
   306                           
   307                           
   308                           ;psect for function _main
   309  0056                     _main:
   310  0056                     l666:	
   311                           ;incstack = 0
   312                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
   313                           
   314                           
   315                           ;mainn.c: 46:     init_configbits();
   316  0056  120A  118A  2072  120A  118A  	fcall	_init_configbits
   317  005B                     l668:
   318                           
   319                           ;mainn.c: 47:     TRISB=0xF0;
   320  005B  30F0               	movlw	240
   321  005C  1683               	bsf	3,5	;RP0=1, select bank1
   322  005D  1303               	bcf	3,6	;RP1=0, select bank1
   323  005E  0086               	movwf	6	;volatile
   324  005F                     l670:
   325                           
   326                           ;mainn.c: 48:     PORTB=0x00;
   327  005F  1283               	bcf	3,5	;RP0=0, select bank0
   328  0060  1303               	bcf	3,6	;RP1=0, select bank0
   329  0061  0186               	clrf	6	;volatile
   330  0062                     l672:
   331                           
   332                           ;mainn.c: 49:     ei_portb();
   333  0062  120A  118A  206F  120A  118A  	fcall	_ei_portb
   334  0067                     l674:
   335                           
   336                           ;mainn.c: 53:         PORTBbits.RB1=1;
   337  0067  1283               	bcf	3,5	;RP0=0, select bank0
   338  0068  1303               	bcf	3,6	;RP1=0, select bank0
   339  0069  1486               	bsf	6,1	;volatile
   340  006A                     l676:
   341                           
   342                           ;mainn.c: 54:         PORTBbits.RB2=1;
   343  006A  1506               	bsf	6,2	;volatile
   344  006B  2867               	goto	l674
   345  006C  120A  118A  280C   	ljmp	start
   346  006F                     __end_of_main:
   347                           
   348                           	psect	text1
   349  0072                     __ptext1:	
   350 ;; *************** function _init_configbits *****************
   351 ;; Defined at:
   352 ;;		line 3 in file "config.c"
   353 ;; Parameters:    Size  Location     Type
   354 ;;		None
   355 ;; Auto vars:     Size  Location     Type
   356 ;;		None
   357 ;; Return value:  Size  Location     Type
   358 ;;                  1    wreg      void 
   359 ;; Registers used:
   360 ;;		None
   361 ;; Tracked objects:
   362 ;;		On entry : 0/0
   363 ;;		On exit  : 0/0
   364 ;;		Unchanged: 0/0
   365 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   366 ;;      Params:         0       0       0       0       0
   367 ;;      Locals:         0       0       0       0       0
   368 ;;      Temps:          0       0       0       0       0
   369 ;;      Totals:         0       0       0       0       0
   370 ;;Total ram usage:        0 bytes
   371 ;; Hardware stack levels used: 1
   372 ;; Hardware stack levels required when called: 1
   373 ;; This function calls:
   374 ;;		Nothing
   375 ;; This function is called by:
   376 ;;		_main
   377 ;; This function uses a non-reentrant model
   378 ;;
   379                           
   380                           
   381                           ;psect for function _init_configbits
   382  0072                     _init_configbits:
   383  0072                     l37:	
   384                           ;incstack = 0
   385                           ; Regs used in _init_configbits: []
   386                           
   387  0072  0008               	return
   388  0073                     __end_of_init_configbits:
   389                           
   390                           	psect	text2
   391  006F                     __ptext2:	
   392 ;; *************** function _ei_portb *****************
   393 ;; Defined at:
   394 ;;		line 5 in file "interrupt.c"
   395 ;; Parameters:    Size  Location     Type
   396 ;;		None
   397 ;; Auto vars:     Size  Location     Type
   398 ;;		None
   399 ;; Return value:  Size  Location     Type
   400 ;;                  1    wreg      void 
   401 ;; Registers used:
   402 ;;		None
   403 ;; Tracked objects:
   404 ;;		On entry : 0/0
   405 ;;		On exit  : 0/0
   406 ;;		Unchanged: 0/0
   407 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   408 ;;      Params:         0       0       0       0       0
   409 ;;      Locals:         0       0       0       0       0
   410 ;;      Temps:          0       0       0       0       0
   411 ;;      Totals:         0       0       0       0       0
   412 ;;Total ram usage:        0 bytes
   413 ;; Hardware stack levels used: 1
   414 ;; Hardware stack levels required when called: 1
   415 ;; This function calls:
   416 ;;		Nothing
   417 ;; This function is called by:
   418 ;;		_main
   419 ;; This function uses a non-reentrant model
   420 ;;
   421                           
   422                           
   423                           ;psect for function _ei_portb
   424  006F                     _ei_portb:
   425  006F                     l634:	
   426                           ;incstack = 0
   427                           ; Regs used in _ei_portb: []
   428                           
   429                           
   430                           ;interrupt.c: 7:     INTCONbits.GIE=1;
   431  006F  178B               	bsf	11,7	;volatile
   432                           
   433                           ;interrupt.c: 8:     INTCONbits.RBIE=1;
   434  0070  158B               	bsf	11,3	;volatile
   435  0071                     l42:
   436  0071  0008               	return
   437  0072                     __end_of_ei_portb:
   438                           
   439                           	psect	text3
   440  0013                     __ptext3:	
   441 ;; *************** function _port_interrupt *****************
   442 ;; Defined at:
   443 ;;		line 15 in file "mainn.c"
   444 ;; Parameters:    Size  Location     Type
   445 ;;		None
   446 ;; Auto vars:     Size  Location     Type
   447 ;;		None
   448 ;; Return value:  Size  Location     Type
   449 ;;                  1    wreg      void 
   450 ;; Registers used:
   451 ;;		wreg, status,2, status,0
   452 ;; Tracked objects:
   453 ;;		On entry : 0/0
   454 ;;		On exit  : 0/0
   455 ;;		Unchanged: 0/0
   456 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   457 ;;      Params:         0       0       0       0       0
   458 ;;      Locals:         0       0       0       0       0
   459 ;;      Temps:          5       0       0       0       0
   460 ;;      Totals:         5       0       0       0       0
   461 ;;Total ram usage:        5 bytes
   462 ;; Hardware stack levels used: 1
   463 ;; This function calls:
   464 ;;		Nothing
   465 ;; This function is called by:
   466 ;;		Interrupt level 1
   467 ;; This function uses a non-reentrant model
   468 ;;
   469                           
   470                           
   471                           ;psect for function _port_interrupt
   472  0013                     _port_interrupt:
   473  0013                     i1l636:
   474                           
   475                           ;mainn.c: 16:     PORTB=0x00;
   476  0013  1283               	bcf	3,5	;RP0=0, select bank0
   477  0014  1303               	bcf	3,6	;RP1=0, select bank0
   478  0015  0186               	clrf	6	;volatile
   479  0016                     i1l638:
   480                           
   481                           ;mainn.c: 18:     if(INTCONbits.RBIF && PORTBbits.RB4){
   482  0016  1C0B               	btfss	11,0	;volatile
   483  0017  2819               	goto	u1_21
   484  0018  281A               	goto	u1_20
   485  0019                     u1_21:
   486  0019  282D               	goto	i1l19
   487  001A                     u1_20:
   488  001A                     i1l640:
   489  001A  1E06               	btfss	6,4	;volatile
   490  001B  281D               	goto	u2_21
   491  001C  281E               	goto	u2_20
   492  001D                     u2_21:
   493  001D  282D               	goto	i1l19
   494  001E                     u2_20:
   495  001E                     i1l642:
   496                           
   497                           ;mainn.c: 20:         PORTBbits.RB0=1;
   498  001E  1406               	bsf	6,0	;volatile
   499  001F                     i1l644:
   500                           
   501                           ;mainn.c: 21:         _delay((unsigned long)((3000)*(4000000/4000.0)));
   502  001F  3010               	movlw	16
   503  0020  00F2               	movwf	??_port_interrupt+2
   504  0021  3039               	movlw	57
   505  0022  00F1               	movwf	??_port_interrupt+1
   506  0023  300D               	movlw	13
   507  0024  00F0               	movwf	??_port_interrupt
   508  0025                     u9_27:
   509  0025  0BF0               	decfsz	??_port_interrupt,f
   510  0026  2825               	goto	u9_27
   511  0027  0BF1               	decfsz	??_port_interrupt+1,f
   512  0028  2825               	goto	u9_27
   513  0029  0BF2               	decfsz	??_port_interrupt+2,f
   514  002A  2825               	goto	u9_27
   515  002B  282C               	nop2
   516                           
   517                           ;mainn.c: 22:     }
   518  002C  284E               	goto	i1l664
   519  002D                     i1l19:	
   520                           ;mainn.c: 23:     else if(INTCONbits.RBIF && PORTBbits.RB5){
   521                           
   522  002D  1C0B               	btfss	11,0	;volatile
   523  002E  2830               	goto	u3_21
   524  002F  2831               	goto	u3_20
   525  0030                     u3_21:
   526  0030  2837               	goto	i1l21
   527  0031                     u3_20:
   528  0031                     i1l646:
   529  0031  1E86               	btfss	6,5	;volatile
   530  0032  2834               	goto	u4_21
   531  0033  2835               	goto	u4_20
   532  0034                     u4_21:
   533  0034  2837               	goto	i1l21
   534  0035                     u4_20:
   535  0035                     i1l648:
   536                           
   537                           ;mainn.c: 25:         PORTBbits.RB1=1;
   538  0035  1486               	bsf	6,1	;volatile
   539  0036  281F               	goto	i1l644
   540  0037                     i1l21:	
   541                           ;mainn.c: 28:     else if(INTCONbits.RBIF && PORTBbits.RB6){
   542                           
   543  0037  1C0B               	btfss	11,0	;volatile
   544  0038  283A               	goto	u5_21
   545  0039  283B               	goto	u5_20
   546  003A                     u5_21:
   547  003A  2841               	goto	i1l23
   548  003B                     u5_20:
   549  003B                     i1l652:
   550  003B  1F06               	btfss	6,6	;volatile
   551  003C  283E               	goto	u6_21
   552  003D  283F               	goto	u6_20
   553  003E                     u6_21:
   554  003E  2841               	goto	i1l23
   555  003F                     u6_20:
   556  003F                     i1l654:
   557                           
   558                           ;mainn.c: 29:         PORTBbits.RB2=1;
   559  003F  1506               	bsf	6,2	;volatile
   560  0040  281F               	goto	i1l644
   561  0041                     i1l23:	
   562                           ;mainn.c: 33:     else if(INTCONbits.RBIF && PORTBbits.RB7){
   563                           
   564  0041  1C0B               	btfss	11,0	;volatile
   565  0042  2844               	goto	u7_21
   566  0043  2845               	goto	u7_20
   567  0044                     u7_21:
   568  0044  284E               	goto	i1l22
   569  0045                     u7_20:
   570  0045                     i1l658:
   571  0045  1F86               	btfss	6,7	;volatile
   572  0046  2848               	goto	u8_21
   573  0047  2849               	goto	u8_20
   574  0048                     u8_21:
   575  0048  284E               	goto	i1l22
   576  0049                     u8_20:
   577  0049                     i1l660:
   578                           
   579                           ;mainn.c: 34:         PORTB |=7;
   580  0049  3007               	movlw	7
   581  004A  00F0               	movwf	??_port_interrupt
   582  004B  0870               	movf	??_port_interrupt,w
   583  004C  0486               	iorwf	6,f	;volatile
   584  004D  281F               	goto	i1l644
   585  004E                     i1l22:
   586  004E                     i1l664:
   587                           
   588                           ;mainn.c: 37:     INTCONbits.RBIF=0;
   589  004E  100B               	bcf	11,0	;volatile
   590  004F                     i1l26:
   591  004F  0874               	movf	??_port_interrupt+4,w
   592  0050  008A               	movwf	10
   593  0051  0E73               	swapf	??_port_interrupt+3,w
   594  0052  0083               	movwf	3
   595  0053  0EFE               	swapf	btemp,f
   596  0054  0E7E               	swapf	btemp,w
   597  0055  0009               	retfie
   598  0056                     __end_of_port_interrupt:
   599  007E                     btemp	set	126	;btemp
   600  007E                     wtemp0	set	126
   601                           
   602                           	psect	intentry
   603  0004                     __pintentry:	
   604                           ;incstack = 0
   605                           ; Regs used in _port_interrupt: [wreg+status,2+status,0]
   606                           
   607  0004                     interrupt_function:
   608  007E                     saved_w	set	btemp
   609  0004  00FE               	movwf	btemp
   610  0005  0E03               	swapf	3,w
   611  0006  00F3               	movwf	??_port_interrupt+3
   612  0007  080A               	movf	10,w
   613  0008  00F4               	movwf	??_port_interrupt+4
   614  0009  120A  118A  2813   	ljmp	_port_interrupt
   615                           
   616                           	psect	config
   617                           
   618                           ;Config register CONFIG @ 0x2007
   619                           ;	Oscillator Selection bits
   620                           ;	FOSC = 0xB, user specified literal
   621                           ;	Watchdog Timer Enable bit
   622                           ;	WDTE = OFF, WDT disabled
   623                           ;	Power-up Timer Enable bit
   624                           ;	PWRTE = OFF, PWRT disabled
   625                           ;	Brown-out Reset Enable bit
   626                           ;	BOREN = OFF, BOR disabled
   627                           ;	Low-Voltage (Single-Supply) In-Circuit Serial Programming Enable bit
   628                           ;	LVP = OFF, RB3 is digital I/O, HV on MCLR must be used for programming
   629                           ;	Data EEPROM Memory Code Protection bit
   630                           ;	CPD = OFF, Data EEPROM code protection off
   631                           ;	Flash Program Memory Write Enable bits
   632                           ;	WRT = OFF, Write protection off; all program memory may be written to by EECON control
   633                           ;	In-Circuit Debugger Mode bit
   634                           ;	DEBUG = 0x1, unprogrammed default
   635                           ;	Flash Program Memory Code Protection bit
   636                           ;	CP = OFF, Code protection off
   637  2007                     	org	8199
   638  2007  3F3B               	dw	16187

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      5       5
    BANK0            80      0       0
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    None.

Critical Paths under _port_interrupt in COMMON

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _port_interrupt in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _port_interrupt in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _port_interrupt in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _port_interrupt in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0       0
                           _ei_portb
                    _init_configbits
 ---------------------------------------------------------------------------------
 (1) _init_configbits                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ei_portb                                             0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (2) _port_interrupt                                       5     5      0       0
                                              0 COMMON     5     5      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ei_portb
   _init_configbits

 _port_interrupt (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      5       5       1       35.7%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       0      12        0.0%


Microchip Technology PIC Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Sat Jul 31 12:25:23 2021

                      l42 0071                        l37 0072    __end_of_port_interrupt 0056  
                     l634 006F                       l670 005F                       l672 0062  
                     l674 0067                       l666 0056                       l676 006A  
                     l668 005B                      i1l21 0037                      i1l22 004E  
                    i1l23 0041                      i1l26 004F                      i1l19 002D  
                    u1_20 001A                      u1_21 0019                      u2_20 001E  
                    u2_21 001D                      u3_20 0031                      u3_21 0030  
                    u4_20 0035                      u4_21 0034                      u5_20 003B  
                    u5_21 003A                      u6_20 003F                      u6_21 003E  
                    u7_20 0045                      u7_21 0044                      u8_20 0049  
                    u8_21 0048                      u9_27 0025                      _main 0056  
                    btemp 007E                      start 000C           ?_port_interrupt 0070  
                   ?_main 0070                     i1l640 001A                     i1l642 001E  
                   i1l660 0049                     i1l652 003B                     i1l644 001F  
                   i1l636 0013                     i1l654 003F                     i1l646 0031  
                   i1l638 0016                     i1l648 0035                     i1l664 004E  
                   i1l658 0045                     _PORTB 0006                     _TRISB 0086  
                   pclath 000A                     status 0003                     wtemp0 007E  
         __initialization 000F              __end_of_main 006F                    ??_main 0075  
        __end_of_ei_portb 0072           _init_configbits 0072                    saved_w 007E  
 __end_of__initialization 000F            __pcstackCOMMON 0070   __end_of_init_configbits 0073  
        ??_port_interrupt 0070                __pmaintext 0056                __pintentry 0004  
               ?_ei_portb 0070                   __ptext1 0072                   __ptext2 006F  
                 __ptext3 0013                ??_ei_portb 0075      end_of_initialization 000F  
        ?_init_configbits 0070                 _PORTBbits 0006       start_initialization 000F  
               ___latbits 0002         __size_of_ei_portb 0003         interrupt_function 0004  
 __size_of_port_interrupt 0043  __size_of_init_configbits 0001                  _ei_portb 006F  
           __size_of_main 0019                _INTCONbits 000B                  intlevel1 0000  
          _port_interrupt 0013         ??_init_configbits 0075  
