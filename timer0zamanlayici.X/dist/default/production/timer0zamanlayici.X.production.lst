

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Sat Jul 31 13:53:27 2021

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og1 
     1                           	processor	16F877A
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     6                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	maintext,global,class=CODE,split=1,delta=2
     8                           	psect	text1,local,class=CODE,merge=1,delta=2
     9                           	psect	text2,local,class=CODE,merge=1,delta=2
    10                           	psect	intentry,global,class=CODE,delta=2
    11                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    12                           	dabs	1,0x7E,2
    13  0000                     
    14                           ; Version 2.20
    15                           ; Generated 12/02/2020 GMT
    16                           ; 
    17                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    18                           ; All rights reserved.
    19                           ; 
    20                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    21                           ; 
    22                           ; Redistribution and use in source and binary forms, with or without modification, are
    23                           ; permitted provided that the following conditions are met:
    24                           ; 
    25                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    26                           ;        conditions and the following disclaimer.
    27                           ; 
    28                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    29                           ;        of conditions and the following disclaimer in the documentation and/or other
    30                           ;        materials provided with the distribution.
    31                           ; 
    32                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    33                           ;        software without specific prior written permission.
    34                           ; 
    35                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    36                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    37                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    38                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    39                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    40                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    41                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    42                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    43                           ; 
    44                           ; 
    45                           ; Code-generator required, PIC16F877A Definitions
    46                           ; 
    47                           ; SFR Addresses
    48  0000                     	;# 
    49  0001                     	;# 
    50  0002                     	;# 
    51  0003                     	;# 
    52  0004                     	;# 
    53  0005                     	;# 
    54  0006                     	;# 
    55  0007                     	;# 
    56  0008                     	;# 
    57  0009                     	;# 
    58  000A                     	;# 
    59  000B                     	;# 
    60  000C                     	;# 
    61  000D                     	;# 
    62  000E                     	;# 
    63  000E                     	;# 
    64  000F                     	;# 
    65  0010                     	;# 
    66  0011                     	;# 
    67  0012                     	;# 
    68  0013                     	;# 
    69  0014                     	;# 
    70  0015                     	;# 
    71  0015                     	;# 
    72  0016                     	;# 
    73  0017                     	;# 
    74  0018                     	;# 
    75  0019                     	;# 
    76  001A                     	;# 
    77  001B                     	;# 
    78  001B                     	;# 
    79  001C                     	;# 
    80  001D                     	;# 
    81  001E                     	;# 
    82  001F                     	;# 
    83  0081                     	;# 
    84  0085                     	;# 
    85  0086                     	;# 
    86  0087                     	;# 
    87  0088                     	;# 
    88  0089                     	;# 
    89  008C                     	;# 
    90  008D                     	;# 
    91  008E                     	;# 
    92  0091                     	;# 
    93  0092                     	;# 
    94  0093                     	;# 
    95  0094                     	;# 
    96  0098                     	;# 
    97  0099                     	;# 
    98  009C                     	;# 
    99  009D                     	;# 
   100  009E                     	;# 
   101  009F                     	;# 
   102  010C                     	;# 
   103  010D                     	;# 
   104  010E                     	;# 
   105  010F                     	;# 
   106  018C                     	;# 
   107  018D                     	;# 
   108  0000                     	;# 
   109  0001                     	;# 
   110  0002                     	;# 
   111  0003                     	;# 
   112  0004                     	;# 
   113  0005                     	;# 
   114  0006                     	;# 
   115  0007                     	;# 
   116  0008                     	;# 
   117  0009                     	;# 
   118  000A                     	;# 
   119  000B                     	;# 
   120  000C                     	;# 
   121  000D                     	;# 
   122  000E                     	;# 
   123  000E                     	;# 
   124  000F                     	;# 
   125  0010                     	;# 
   126  0011                     	;# 
   127  0012                     	;# 
   128  0013                     	;# 
   129  0014                     	;# 
   130  0015                     	;# 
   131  0015                     	;# 
   132  0016                     	;# 
   133  0017                     	;# 
   134  0018                     	;# 
   135  0019                     	;# 
   136  001A                     	;# 
   137  001B                     	;# 
   138  001B                     	;# 
   139  001C                     	;# 
   140  001D                     	;# 
   141  001E                     	;# 
   142  001F                     	;# 
   143  0081                     	;# 
   144  0085                     	;# 
   145  0086                     	;# 
   146  0087                     	;# 
   147  0088                     	;# 
   148  0089                     	;# 
   149  008C                     	;# 
   150  008D                     	;# 
   151  008E                     	;# 
   152  0091                     	;# 
   153  0092                     	;# 
   154  0093                     	;# 
   155  0094                     	;# 
   156  0098                     	;# 
   157  0099                     	;# 
   158  009C                     	;# 
   159  009D                     	;# 
   160  009E                     	;# 
   161  009F                     	;# 
   162  010C                     	;# 
   163  010D                     	;# 
   164  010E                     	;# 
   165  010F                     	;# 
   166  018C                     	;# 
   167  018D                     	;# 
   168  0006                     _PORTB	set	6
   169  0001                     _TMR0	set	1
   170  0006                     _PORTBbits	set	6
   171  000B                     _INTCONbits	set	11
   172  0086                     _TRISBbits	set	134
   173  0081                     _OPTION_REG	set	129
   174  0081                     _OPTION_REGbits	set	129
   175                           
   176                           	psect	cinit
   177  000F                     start_initialization:	
   178                           ; #config settings
   179                           
   180  000F                     __initialization:
   181                           
   182                           ; Clear objects allocated to COMMON
   183  000F  01F7               	clrf	__pbssCOMMON& (0+127)
   184  0010  01F8               	clrf	(__pbssCOMMON+1)& (0+127)
   185  0011                     end_of_initialization:	
   186                           ;End of C runtime variable initialization code
   187                           
   188  0011                     __end_of__initialization:
   189  0011  0183               	clrf	3
   190  0012  120A  118A  283F   	ljmp	_main	;jump to C main() function
   191                           
   192                           	psect	bssCOMMON
   193  0077                     __pbssCOMMON:
   194  0077                     time_interrupt@i:
   195  0077                     	ds	2
   196                           
   197                           	psect	cstackCOMMON
   198  0070                     __pcstackCOMMON:
   199  0070                     ?_init_configbits:
   200  0070                     ?_time_interrupt:	
   201                           ; 1 bytes @ 0x0
   202                           
   203  0070                     ??_time_interrupt:	
   204                           ; 1 bytes @ 0x0
   205                           
   206                           
   207                           ; 1 bytes @ 0x0
   208  0070                     	ds	2
   209  0072                     ??_init_configbits:
   210  0072                     ?_main:	
   211                           ; 1 bytes @ 0x2
   212                           
   213  0072                     main@argc:	
   214                           ; 2 bytes @ 0x2
   215                           
   216                           
   217                           ; 2 bytes @ 0x2
   218  0072                     	ds	2
   219  0074                     main@argv:
   220                           
   221                           ; 2 bytes @ 0x4
   222  0074                     	ds	2
   223  0076                     ??_main:
   224                           
   225                           ; 1 bytes @ 0x6
   226  0076                     	ds	1
   227                           
   228                           	psect	maintext
   229  003F                     __pmaintext:	
   230 ;;
   231 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
   232 ;;
   233 ;; *************** function _main *****************
   234 ;; Defined at:
   235 ;;		line 37 in file "main.c"
   236 ;; Parameters:    Size  Location     Type
   237 ;;  argc            2    2[COMMON] int 
   238 ;;  argv            2    4[COMMON] PTR PTR unsigned char 
   239 ;; Auto vars:     Size  Location     Type
   240 ;;		None
   241 ;; Return value:  Size  Location     Type
   242 ;;                  2    2[COMMON] int 
   243 ;; Registers used:
   244 ;;		wreg, status,2, status,0, pclath, cstack
   245 ;; Tracked objects:
   246 ;;		On entry : B00/0
   247 ;;		On exit  : 0/0
   248 ;;		Unchanged: 0/0
   249 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   250 ;;      Params:         4       0       0       0       0
   251 ;;      Locals:         0       0       0       0       0
   252 ;;      Temps:          1       0       0       0       0
   253 ;;      Totals:         5       0       0       0       0
   254 ;;Total ram usage:        5 bytes
   255 ;; Hardware stack levels required when called: 2
   256 ;; This function calls:
   257 ;;		_init_configbits
   258 ;; This function is called by:
   259 ;;		Startup code after reset
   260 ;; This function uses a non-reentrant model
   261 ;;
   262                           
   263                           
   264                           ;psect for function _main
   265  003F                     _main:
   266  003F                     l662:	
   267                           ;incstack = 0
   268                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
   269                           
   270                           
   271                           ;main.c: 40:     init_configbits();
   272  003F  120A  118A  205C  120A  118A  	fcall	_init_configbits
   273  0044                     l664:
   274                           
   275                           ;main.c: 42:     INTCONbits.GIE=1;
   276  0044  178B               	bsf	11,7	;volatile
   277  0045                     l666:
   278                           
   279                           ;main.c: 43:     INTCONbits.TMR0IE=1;
   280  0045  168B               	bsf	11,5	;volatile
   281  0046                     l668:
   282                           
   283                           ;main.c: 44:     OPTION_REGbits.T0CS=0;
   284  0046  1683               	bsf	3,5	;RP0=1, select bank1
   285  0047  1303               	bcf	3,6	;RP1=0, select bank1
   286  0048  1281               	bcf	1,5	;volatile
   287  0049                     l670:
   288                           
   289                           ;main.c: 45:     OPTION_REGbits.PSA=0;
   290  0049  1181               	bcf	1,3	;volatile
   291  004A                     l672:
   292                           
   293                           ;main.c: 46:     OPTION_REG |=7;
   294  004A  3007               	movlw	7
   295  004B  00F6               	movwf	??_main
   296  004C  0876               	movf	??_main,w
   297  004D  0481               	iorwf	1,f	;volatile
   298  004E                     l674:
   299                           
   300                           ;main.c: 47:     TMR0=59;
   301  004E  303B               	movlw	59
   302  004F  1283               	bcf	3,5	;RP0=0, select bank0
   303  0050  1303               	bcf	3,6	;RP1=0, select bank0
   304  0051  0081               	movwf	1	;volatile
   305  0052                     l676:
   306                           
   307                           ;main.c: 48:     TRISBbits.TRISB0=0;
   308  0052  1683               	bsf	3,5	;RP0=1, select bank1
   309  0053  1303               	bcf	3,6	;RP1=0, select bank1
   310  0054  1006               	bcf	6,0	;volatile
   311  0055                     l678:
   312                           
   313                           ;main.c: 49:     PORTB=0x00;
   314  0055  1283               	bcf	3,5	;RP0=0, select bank0
   315  0056  1303               	bcf	3,6	;RP1=0, select bank0
   316  0057  0186               	clrf	6	;volatile
   317  0058                     l30:	
   318                           ;main.c: 52:     while(1){
   319                           
   320  0058                     l31:	
   321                           ;main.c: 57:     }
   322                           
   323  0058  2858               	goto	l30
   324  0059  120A  118A  280C   	ljmp	start
   325  005C                     __end_of_main:
   326                           
   327                           	psect	text1
   328  005C                     __ptext1:	
   329 ;; *************** function _init_configbits *****************
   330 ;; Defined at:
   331 ;;		line 3 in file "config.c"
   332 ;; Parameters:    Size  Location     Type
   333 ;;		None
   334 ;; Auto vars:     Size  Location     Type
   335 ;;		None
   336 ;; Return value:  Size  Location     Type
   337 ;;                  1    wreg      void 
   338 ;; Registers used:
   339 ;;		None
   340 ;; Tracked objects:
   341 ;;		On entry : 0/0
   342 ;;		On exit  : 0/0
   343 ;;		Unchanged: 0/0
   344 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   345 ;;      Params:         0       0       0       0       0
   346 ;;      Locals:         0       0       0       0       0
   347 ;;      Temps:          0       0       0       0       0
   348 ;;      Totals:         0       0       0       0       0
   349 ;;Total ram usage:        0 bytes
   350 ;; Hardware stack levels used: 1
   351 ;; Hardware stack levels required when called: 1
   352 ;; This function calls:
   353 ;;		Nothing
   354 ;; This function is called by:
   355 ;;		_main
   356 ;; This function uses a non-reentrant model
   357 ;;
   358                           
   359                           
   360                           ;psect for function _init_configbits
   361  005C                     _init_configbits:
   362  005C                     l36:	
   363                           ;incstack = 0
   364                           ; Regs used in _init_configbits: []
   365                           
   366  005C  0008               	return
   367  005D                     __end_of_init_configbits:
   368                           
   369                           	psect	text2
   370  0015                     __ptext2:	
   371 ;; *************** function _time_interrupt *****************
   372 ;; Defined at:
   373 ;;		line 14 in file "main.c"
   374 ;; Parameters:    Size  Location     Type
   375 ;;		None
   376 ;; Auto vars:     Size  Location     Type
   377 ;;		None
   378 ;; Return value:  Size  Location     Type
   379 ;;                  1    wreg      void 
   380 ;; Registers used:
   381 ;;		wreg, status,2, status,0
   382 ;; Tracked objects:
   383 ;;		On entry : 0/0
   384 ;;		On exit  : 0/0
   385 ;;		Unchanged: 0/0
   386 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   387 ;;      Params:         0       0       0       0       0
   388 ;;      Locals:         0       0       0       0       0
   389 ;;      Temps:          2       0       0       0       0
   390 ;;      Totals:         2       0       0       0       0
   391 ;;Total ram usage:        2 bytes
   392 ;; Hardware stack levels used: 1
   393 ;; This function calls:
   394 ;;		Nothing
   395 ;; This function is called by:
   396 ;;		Interrupt level 1
   397 ;; This function uses a non-reentrant model
   398 ;;
   399                           
   400                           
   401                           ;psect for function _time_interrupt
   402  0015                     _time_interrupt:
   403  0015                     i1l628:
   404                           
   405                           ;main.c: 16:     static int i=0;;main.c: 18:     if(INTCONbits.TMR0IF && i==20){
   406  0015  1D0B               	btfss	11,2	;volatile
   407  0016  2818               	goto	u1_21
   408  0017  2819               	goto	u1_20
   409  0018                     u1_21:
   410  0018  2823               	goto	i1l23
   411  0019                     u1_20:
   412  0019                     i1l630:
   413  0019  3014               	movlw	20
   414  001A  0677               	xorwf	time_interrupt@i,w
   415  001B  0478               	iorwf	time_interrupt@i+1,w
   416  001C  1D03               	btfss	3,2
   417  001D  281F               	goto	u2_21
   418  001E  2820               	goto	u2_20
   419  001F                     u2_21:
   420  001F  2823               	goto	i1l23
   421  0020                     u2_20:
   422  0020                     i1l632:
   423                           
   424                           ;main.c: 20:         PORTBbits.RB0=1;
   425  0020  1283               	bcf	3,5	;RP0=0, select bank0
   426  0021  1303               	bcf	3,6	;RP1=0, select bank0
   427  0022  1406               	bsf	6,0	;volatile
   428  0023                     i1l23:	
   429                           ;main.c: 21:     }
   430                           
   431                           
   432                           ;main.c: 23:     if(INTCONbits.TMR0IF && i==40){
   433  0023  1D0B               	btfss	11,2	;volatile
   434  0024  2826               	goto	u3_21
   435  0025  2827               	goto	u3_20
   436  0026                     u3_21:
   437  0026  2833               	goto	i1l640
   438  0027                     u3_20:
   439  0027                     i1l634:
   440  0027  3028               	movlw	40
   441  0028  0677               	xorwf	time_interrupt@i,w
   442  0029  0478               	iorwf	time_interrupt@i+1,w
   443  002A  1D03               	btfss	3,2
   444  002B  282D               	goto	u4_21
   445  002C  282E               	goto	u4_20
   446  002D                     u4_21:
   447  002D  2833               	goto	i1l640
   448  002E                     u4_20:
   449  002E                     i1l636:
   450                           
   451                           ;main.c: 24:         PORTBbits.RB0=0;
   452  002E  1283               	bcf	3,5	;RP0=0, select bank0
   453  002F  1303               	bcf	3,6	;RP1=0, select bank0
   454  0030  1006               	bcf	6,0	;volatile
   455  0031                     i1l638:
   456                           
   457                           ;main.c: 25:         i=0;
   458  0031  01F7               	clrf	time_interrupt@i
   459  0032  01F8               	clrf	time_interrupt@i+1
   460  0033                     i1l640:
   461                           
   462                           ;main.c: 28:     TMR0=59;
   463  0033  303B               	movlw	59
   464  0034  1283               	bcf	3,5	;RP0=0, select bank0
   465  0035  1303               	bcf	3,6	;RP1=0, select bank0
   466  0036  0081               	movwf	1	;volatile
   467  0037                     i1l642:
   468                           
   469                           ;main.c: 29:     INTCONbits.TMR0IF=0;
   470  0037  110B               	bcf	11,2	;volatile
   471  0038                     i1l25:
   472  0038  0871               	movf	??_time_interrupt+1,w
   473  0039  008A               	movwf	10
   474  003A  0E70               	swapf	??_time_interrupt,w
   475  003B  0083               	movwf	3
   476  003C  0EFE               	swapf	btemp,f
   477  003D  0E7E               	swapf	btemp,w
   478  003E  0009               	retfie
   479  003F                     __end_of_time_interrupt:
   480  007E                     btemp	set	126	;btemp
   481  007E                     wtemp0	set	126
   482                           
   483                           	psect	intentry
   484  0004                     __pintentry:	
   485                           ;incstack = 0
   486                           ; Regs used in _time_interrupt: [wreg+status,2+status,0]
   487                           
   488  0004                     interrupt_function:
   489  007E                     saved_w	set	btemp
   490  0004  00FE               	movwf	btemp
   491  0005  0E03               	swapf	3,w
   492  0006  00F0               	movwf	??_time_interrupt
   493  0007  080A               	movf	10,w
   494  0008  00F1               	movwf	??_time_interrupt+1
   495  0009  120A  118A  2815   	ljmp	_time_interrupt
   496                           
   497                           	psect	config
   498                           
   499                           ;Config register CONFIG @ 0x2007
   500                           ;	Oscillator Selection bits
   501                           ;	FOSC = 0xB, user specified literal
   502                           ;	Watchdog Timer Enable bit
   503                           ;	WDTE = OFF, WDT disabled
   504                           ;	Power-up Timer Enable bit
   505                           ;	PWRTE = OFF, PWRT disabled
   506                           ;	Brown-out Reset Enable bit
   507                           ;	BOREN = OFF, BOR disabled
   508                           ;	Low-Voltage (Single-Supply) In-Circuit Serial Programming Enable bit
   509                           ;	LVP = OFF, RB3 is digital I/O, HV on MCLR must be used for programming
   510                           ;	Data EEPROM Memory Code Protection bit
   511                           ;	CPD = OFF, Data EEPROM code protection off
   512                           ;	Flash Program Memory Write Enable bits
   513                           ;	WRT = OFF, Write protection off; all program memory may be written to by EECON control
   514                           ;	In-Circuit Debugger Mode bit
   515                           ;	DEBUG = 0x1, unprogrammed default
   516                           ;	Flash Program Memory Code Protection bit
   517                           ;	CP = OFF, Code protection off
   518  2007                     	org	8199
   519  2007  3F3B               	dw	16187

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         2
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      7       9
    BANK0            80      0       0
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    None.

Critical Paths under _time_interrupt in COMMON

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _time_interrupt in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _time_interrupt in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _time_interrupt in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _time_interrupt in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 5     1      4       0
                                              2 COMMON     5     1      4
                    _init_configbits
 ---------------------------------------------------------------------------------
 (1) _init_configbits                                      0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (2) _time_interrupt                                       2     2      0       0
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _init_configbits

 _time_interrupt (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      7       9       1       64.3%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       9       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       9      12        0.0%


Microchip Technology PIC Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Sat Jul 31 13:53:27 2021

                      l30 0058                        l31 0058                        l36 005C  
                     l670 0049                       l662 003F                       l672 004A  
                     l664 0044                       l674 004E                       l666 0045  
                     l676 0052                       l668 0046                       l678 0055  
        ??_time_interrupt 0070                      i1l23 0023                      i1l25 0038  
                    _TMR0 0001                      u1_20 0019                      u1_21 0018  
                    u2_20 0020                      u2_21 001F                      u3_20 0027  
                    u3_21 0026                      u4_20 002E                      u4_21 002D  
                    _main 003F                      btemp 007E                      start 000C  
                   ?_main 0072                     i1l630 0019                     i1l640 0033  
                   i1l632 0020                     i1l642 0037                     i1l634 0027  
                   i1l636 002E                     i1l628 0015                     i1l638 0031  
                   _PORTB 0006                     pclath 000A                     status 0003  
                   wtemp0 007E           __initialization 000F              __end_of_main 005C  
                  ??_main 0076           _init_configbits 005C                    saved_w 007E  
 __end_of__initialization 0011            __pcstackCOMMON 0070            _OPTION_REGbits 0081  
 __end_of_init_configbits 005D                __pmaintext 003F                __pintentry 0004  
                 __ptext1 005C                   __ptext2 0015      end_of_initialization 0011  
        ?_init_configbits 0070   __size_of_time_interrupt 002A                 _PORTBbits 0006  
               _TRISBbits 0086       start_initialization 000F               __pbssCOMMON 0077  
               ___latbits 0002            _time_interrupt 0015         interrupt_function 0004  
  __end_of_time_interrupt 003F           time_interrupt@i 0077           ?_time_interrupt 0070  
__size_of_init_configbits 0001             __size_of_main 001D                  main@argc 0072  
                main@argv 0074                _INTCONbits 000B                  intlevel1 0000  
       ??_init_configbits 0072                _OPTION_REG 0081  
