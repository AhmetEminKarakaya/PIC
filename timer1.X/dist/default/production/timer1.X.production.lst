

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Fri Aug 06 12:52:57 2021

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og1 
     1                           	processor	16F877A
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     6                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	maintext,global,class=CODE,split=1,delta=2
     8                           	psect	text1,local,class=CODE,merge=1,delta=2
     9                           	psect	text2,local,class=CODE,merge=1,delta=2
    10                           	psect	intentry,global,class=CODE,delta=2
    11                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    12                           	dabs	1,0x7E,2
    13  0000                     
    14                           ; Version 2.20
    15                           ; Generated 12/02/2020 GMT
    16                           ; 
    17                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    18                           ; All rights reserved.
    19                           ; 
    20                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    21                           ; 
    22                           ; Redistribution and use in source and binary forms, with or without modification, are
    23                           ; permitted provided that the following conditions are met:
    24                           ; 
    25                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    26                           ;        conditions and the following disclaimer.
    27                           ; 
    28                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    29                           ;        of conditions and the following disclaimer in the documentation and/or other
    30                           ;        materials provided with the distribution.
    31                           ; 
    32                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    33                           ;        software without specific prior written permission.
    34                           ; 
    35                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    36                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    37                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    38                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    39                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    40                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    41                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    42                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    43                           ; 
    44                           ; 
    45                           ; Code-generator required, PIC16F877A Definitions
    46                           ; 
    47                           ; SFR Addresses
    48  0000                     	;# 
    49  0001                     	;# 
    50  0002                     	;# 
    51  0003                     	;# 
    52  0004                     	;# 
    53  0005                     	;# 
    54  0006                     	;# 
    55  0007                     	;# 
    56  0008                     	;# 
    57  0009                     	;# 
    58  000A                     	;# 
    59  000B                     	;# 
    60  000C                     	;# 
    61  000D                     	;# 
    62  000E                     	;# 
    63  000E                     	;# 
    64  000F                     	;# 
    65  0010                     	;# 
    66  0011                     	;# 
    67  0012                     	;# 
    68  0013                     	;# 
    69  0014                     	;# 
    70  0015                     	;# 
    71  0015                     	;# 
    72  0016                     	;# 
    73  0017                     	;# 
    74  0018                     	;# 
    75  0019                     	;# 
    76  001A                     	;# 
    77  001B                     	;# 
    78  001B                     	;# 
    79  001C                     	;# 
    80  001D                     	;# 
    81  001E                     	;# 
    82  001F                     	;# 
    83  0081                     	;# 
    84  0085                     	;# 
    85  0086                     	;# 
    86  0087                     	;# 
    87  0088                     	;# 
    88  0089                     	;# 
    89  008C                     	;# 
    90  008D                     	;# 
    91  008E                     	;# 
    92  0091                     	;# 
    93  0092                     	;# 
    94  0093                     	;# 
    95  0094                     	;# 
    96  0098                     	;# 
    97  0099                     	;# 
    98  009C                     	;# 
    99  009D                     	;# 
   100  009E                     	;# 
   101  009F                     	;# 
   102  010C                     	;# 
   103  010D                     	;# 
   104  010E                     	;# 
   105  010F                     	;# 
   106  018C                     	;# 
   107  018D                     	;# 
   108  0000                     	;# 
   109  0001                     	;# 
   110  0002                     	;# 
   111  0003                     	;# 
   112  0004                     	;# 
   113  0005                     	;# 
   114  0006                     	;# 
   115  0007                     	;# 
   116  0008                     	;# 
   117  0009                     	;# 
   118  000A                     	;# 
   119  000B                     	;# 
   120  000C                     	;# 
   121  000D                     	;# 
   122  000E                     	;# 
   123  000E                     	;# 
   124  000F                     	;# 
   125  0010                     	;# 
   126  0011                     	;# 
   127  0012                     	;# 
   128  0013                     	;# 
   129  0014                     	;# 
   130  0015                     	;# 
   131  0015                     	;# 
   132  0016                     	;# 
   133  0017                     	;# 
   134  0018                     	;# 
   135  0019                     	;# 
   136  001A                     	;# 
   137  001B                     	;# 
   138  001B                     	;# 
   139  001C                     	;# 
   140  001D                     	;# 
   141  001E                     	;# 
   142  001F                     	;# 
   143  0081                     	;# 
   144  0085                     	;# 
   145  0086                     	;# 
   146  0087                     	;# 
   147  0088                     	;# 
   148  0089                     	;# 
   149  008C                     	;# 
   150  008D                     	;# 
   151  008E                     	;# 
   152  0091                     	;# 
   153  0092                     	;# 
   154  0093                     	;# 
   155  0094                     	;# 
   156  0098                     	;# 
   157  0099                     	;# 
   158  009C                     	;# 
   159  009D                     	;# 
   160  009E                     	;# 
   161  009F                     	;# 
   162  010C                     	;# 
   163  010D                     	;# 
   164  010E                     	;# 
   165  010F                     	;# 
   166  018C                     	;# 
   167  018D                     	;# 
   168  000E                     _TMR1	set	14
   169  0010                     _T1CONbits	set	16
   170  000B                     _INTCONbits	set	11
   171  0006                     _PORTB	set	6
   172  000C                     _PIR1bits	set	12
   173  0006                     _PORTBbits	set	6
   174  008C                     _PIE1bits	set	140
   175  0086                     _TRISBbits	set	134
   176                           
   177                           	psect	cinit
   178  000F                     start_initialization:	
   179                           ; #config settings
   180                           
   181  000F                     __initialization:
   182                           
   183                           ; Clear objects allocated to COMMON
   184  000F  01F7               	clrf	__pbssCOMMON& (0+127)
   185  0010  01F8               	clrf	(__pbssCOMMON+1)& (0+127)
   186  0011                     end_of_initialization:	
   187                           ;End of C runtime variable initialization code
   188                           
   189  0011                     __end_of__initialization:
   190  0011  0183               	clrf	3
   191  0012  120A  118A  283C   	ljmp	_main	;jump to C main() function
   192                           
   193                           	psect	bssCOMMON
   194  0077                     __pbssCOMMON:
   195  0077                     timer1@counter:
   196  0077                     	ds	2
   197                           
   198                           	psect	cstackCOMMON
   199  0070                     __pcstackCOMMON:
   200  0070                     ?_init_configbits:
   201  0070                     ?_timer1:	
   202                           ; 1 bytes @ 0x0
   203                           
   204  0070                     ??_timer1:	
   205                           ; 1 bytes @ 0x0
   206                           
   207                           
   208                           ; 1 bytes @ 0x0
   209  0070                     	ds	3
   210  0073                     ??_init_configbits:
   211  0073                     ?_main:	
   212                           ; 1 bytes @ 0x3
   213                           
   214  0073                     main@argc:	
   215                           ; 2 bytes @ 0x3
   216                           
   217                           
   218                           ; 2 bytes @ 0x3
   219  0073                     	ds	2
   220  0075                     main@argv:
   221                           
   222                           ; 2 bytes @ 0x5
   223  0075                     	ds	2
   224  0077                     ??_main:
   225                           
   226                           	psect	maintext
   227  003C                     __pmaintext:	
   228                           ; 1 bytes @ 0x7
   229 ;;
   230 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   231 ;;
   232 ;; *************** function _main *****************
   233 ;; Defined at:
   234 ;;		line 35 in file "main.c"
   235 ;; Parameters:    Size  Location     Type
   236 ;;  argc            2    3[COMMON] int 
   237 ;;  argv            2    5[COMMON] PTR PTR unsigned char 
   238 ;; Auto vars:     Size  Location     Type
   239 ;;		None
   240 ;; Return value:  Size  Location     Type
   241 ;;                  2    3[COMMON] int 
   242 ;; Registers used:
   243 ;;		status,2, status,0, pclath, cstack
   244 ;; Tracked objects:
   245 ;;		On entry : B00/0
   246 ;;		On exit  : 0/0
   247 ;;		Unchanged: 0/0
   248 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   249 ;;      Params:         4       0       0       0       0
   250 ;;      Locals:         0       0       0       0       0
   251 ;;      Temps:          0       0       0       0       0
   252 ;;      Totals:         4       0       0       0       0
   253 ;;Total ram usage:        4 bytes
   254 ;; Hardware stack levels required when called: 2
   255 ;; This function calls:
   256 ;;		_init_configbits
   257 ;; This function is called by:
   258 ;;		Startup code after reset
   259 ;; This function uses a non-reentrant model
   260 ;;
   261                           
   262                           
   263                           ;psect for function _main
   264  003C                     _main:
   265  003C                     l663:	
   266                           ;incstack = 0
   267                           ; Regs used in _main: [status,2+status,0+pclath+cstack]
   268                           
   269                           
   270                           ;main.c: 37:     init_configbits();
   271  003C  120A  118A  205A  120A  118A  	fcall	_init_configbits
   272  0041                     l665:
   273                           
   274                           ;main.c: 39:     TRISBbits.TRISB0=0;
   275  0041  1683               	bsf	3,5	;RP0=1, select bank1
   276  0042  1303               	bcf	3,6	;RP1=0, select bank1
   277  0043  1006               	bcf	6,0	;volatile
   278  0044                     l667:
   279                           
   280                           ;main.c: 40:     PORTB=0x00;
   281  0044  1283               	bcf	3,5	;RP0=0, select bank0
   282  0045  1303               	bcf	3,6	;RP1=0, select bank0
   283  0046  0186               	clrf	6	;volatile
   284  0047                     l669:
   285                           
   286                           ;main.c: 42:     INTCONbits.GIE=1;
   287  0047  178B               	bsf	11,7	;volatile
   288  0048                     l671:
   289                           
   290                           ;main.c: 43:     INTCONbits.PEIE=1;
   291  0048  170B               	bsf	11,6	;volatile
   292  0049                     l673:
   293                           
   294                           ;main.c: 45:     T1CONbits.TMR1ON=1;
   295  0049  1410               	bsf	16,0	;volatile
   296  004A                     l675:
   297                           
   298                           ;main.c: 46:     T1CONbits.TMR1CS=0;
   299  004A  1090               	bcf	16,1	;volatile
   300  004B                     l677:
   301                           
   302                           ;main.c: 47:     T1CONbits.T1CKPS1=1;
   303  004B  1690               	bsf	16,5	;volatile
   304  004C                     l679:
   305                           
   306                           ;main.c: 48:     T1CONbits.T1CKPS0=0;
   307  004C  1210               	bcf	16,4	;volatile
   308  004D                     l681:
   309                           
   310                           ;main.c: 50:     PIE1bits.TMR1IE=1;
   311  004D  1683               	bsf	3,5	;RP0=1, select bank1
   312  004E  1303               	bcf	3,6	;RP1=0, select bank1
   313  004F  140C               	bsf	12,0	;volatile
   314  0050                     l683:
   315                           
   316                           ;main.c: 52:     TMR1=3035;
   317  0050  300B               	movlw	11
   318  0051  1283               	bcf	3,5	;RP0=0, select bank0
   319  0052  1303               	bcf	3,6	;RP1=0, select bank0
   320  0053  008F               	movwf	15	;volatile
   321  0054  30DB               	movlw	219
   322  0055  008E               	movwf	14	;volatile
   323  0056                     l31:	
   324                           ;main.c: 54:     while(1){
   325                           
   326  0056                     l32:	
   327                           ;main.c: 57:     }
   328                           
   329  0056  2856               	goto	l31
   330  0057  120A  118A  280C   	ljmp	start
   331  005A                     __end_of_main:
   332                           
   333                           	psect	text1
   334  005A                     __ptext1:	
   335 ;; *************** function _init_configbits *****************
   336 ;; Defined at:
   337 ;;		line 3 in file "config.c"
   338 ;; Parameters:    Size  Location     Type
   339 ;;		None
   340 ;; Auto vars:     Size  Location     Type
   341 ;;		None
   342 ;; Return value:  Size  Location     Type
   343 ;;                  1    wreg      void 
   344 ;; Registers used:
   345 ;;		None
   346 ;; Tracked objects:
   347 ;;		On entry : 0/0
   348 ;;		On exit  : 0/0
   349 ;;		Unchanged: 0/0
   350 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   351 ;;      Params:         0       0       0       0       0
   352 ;;      Locals:         0       0       0       0       0
   353 ;;      Temps:          0       0       0       0       0
   354 ;;      Totals:         0       0       0       0       0
   355 ;;Total ram usage:        0 bytes
   356 ;; Hardware stack levels used: 1
   357 ;; Hardware stack levels required when called: 1
   358 ;; This function calls:
   359 ;;		Nothing
   360 ;; This function is called by:
   361 ;;		_main
   362 ;; This function uses a non-reentrant model
   363 ;;
   364                           
   365                           
   366                           ;psect for function _init_configbits
   367  005A                     _init_configbits:
   368  005A                     l37:	
   369                           ;incstack = 0
   370                           ; Regs used in _init_configbits: []
   371                           
   372  005A  0008               	return
   373  005B                     __end_of_init_configbits:
   374                           
   375                           	psect	text2
   376  0015                     __ptext2:	
   377 ;; *************** function _timer1 *****************
   378 ;; Defined at:
   379 ;;		line 14 in file "main.c"
   380 ;; Parameters:    Size  Location     Type
   381 ;;		None
   382 ;; Auto vars:     Size  Location     Type
   383 ;;		None
   384 ;; Return value:  Size  Location     Type
   385 ;;                  1    wreg      void 
   386 ;; Registers used:
   387 ;;		wreg, status,2, status,0
   388 ;; Tracked objects:
   389 ;;		On entry : 0/0
   390 ;;		On exit  : 0/0
   391 ;;		Unchanged: 0/0
   392 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   393 ;;      Params:         0       0       0       0       0
   394 ;;      Locals:         0       0       0       0       0
   395 ;;      Temps:          3       0       0       0       0
   396 ;;      Totals:         3       0       0       0       0
   397 ;;Total ram usage:        3 bytes
   398 ;; Hardware stack levels used: 1
   399 ;; This function calls:
   400 ;;		Nothing
   401 ;; This function is called by:
   402 ;;		Interrupt level 1
   403 ;; This function uses a non-reentrant model
   404 ;;
   405                           
   406                           
   407                           ;psect for function _timer1
   408  0015                     _timer1:
   409  0015                     i1l629:
   410                           
   411                           ;main.c: 16:     TMR1=3035;
   412  0015  300B               	movlw	11
   413  0016  1283               	bcf	3,5	;RP0=0, select bank0
   414  0017  1303               	bcf	3,6	;RP1=0, select bank0
   415  0018  008F               	movwf	15	;volatile
   416  0019  30DB               	movlw	219
   417  001A  008E               	movwf	14	;volatile
   418  001B                     i1l631:
   419                           
   420                           ;main.c: 18:     static unsigned int counter=0;;main.c: 19:     ++counter;
   421  001B  3001               	movlw	1
   422  001C  07F7               	addwf	timer1@counter,f
   423  001D  1803               	skipnc
   424  001E  0AF8               	incf	timer1@counter+1,f
   425  001F  3000               	movlw	0
   426  0020  07F8               	addwf	timer1@counter+1,f
   427  0021                     i1l633:
   428                           
   429                           ;main.c: 21:     if(counter==8){
   430  0021  3008               	movlw	8
   431  0022  0677               	xorwf	timer1@counter,w
   432  0023  0478               	iorwf	timer1@counter+1,w
   433  0024  1D03               	btfss	3,2
   434  0025  2827               	goto	u1_21
   435  0026  2828               	goto	u1_20
   436  0027                     u1_21:
   437  0027  2834               	goto	i1l639
   438  0028                     u1_20:
   439  0028                     i1l635:
   440                           
   441                           ;main.c: 23:         PORTBbits.RB0^=1;
   442  0028  0806               	movf	6,w	;volatile
   443  0029  3901               	andlw	1
   444  002A  00F0               	movwf	??_timer1
   445  002B  3001               	movlw	1
   446  002C  06F0               	xorwf	??_timer1,f
   447  002D  0806               	movf	6,w	;volatile
   448  002E  0670               	xorwf	??_timer1,w
   449  002F  39FE               	andlw	-2
   450  0030  0670               	xorwf	??_timer1,w
   451  0031  0086               	movwf	6	;volatile
   452  0032                     i1l637:
   453                           
   454                           ;main.c: 24:         counter=0;
   455  0032  01F7               	clrf	timer1@counter
   456  0033  01F8               	clrf	timer1@counter+1
   457  0034                     i1l639:
   458                           
   459                           ;main.c: 27:     PIR1bits.TMR1IF=0;
   460  0034  100C               	bcf	12,0	;volatile
   461  0035                     i1l26:
   462  0035  0872               	movf	??_timer1+2,w
   463  0036  008A               	movwf	10
   464  0037  0E71               	swapf	??_timer1+1,w
   465  0038  0083               	movwf	3
   466  0039  0EFE               	swapf	btemp,f
   467  003A  0E7E               	swapf	btemp,w
   468  003B  0009               	retfie
   469  003C                     __end_of_timer1:
   470  007E                     btemp	set	126	;btemp
   471  007E                     wtemp0	set	126
   472                           
   473                           	psect	intentry
   474  0004                     __pintentry:	
   475                           ;incstack = 0
   476                           ; Regs used in _timer1: [wreg+status,2+status,0]
   477                           
   478  0004                     interrupt_function:
   479  007E                     saved_w	set	btemp
   480  0004  00FE               	movwf	btemp
   481  0005  0E03               	swapf	3,w
   482  0006  00F1               	movwf	??_timer1+1
   483  0007  080A               	movf	10,w
   484  0008  00F2               	movwf	??_timer1+2
   485  0009  120A  118A  2815   	ljmp	_timer1
   486                           
   487                           	psect	config
   488                           
   489                           ;Config register CONFIG @ 0x2007
   490                           ;	Oscillator Selection bits
   491                           ;	FOSC = 0xB, user specified literal
   492                           ;	Watchdog Timer Enable bit
   493                           ;	WDTE = OFF, WDT disabled
   494                           ;	Power-up Timer Enable bit
   495                           ;	PWRTE = OFF, PWRT disabled
   496                           ;	Brown-out Reset Enable bit
   497                           ;	BOREN = OFF, BOR disabled
   498                           ;	Low-Voltage (Single-Supply) In-Circuit Serial Programming Enable bit
   499                           ;	LVP = OFF, RB3 is digital I/O, HV on MCLR must be used for programming
   500                           ;	Data EEPROM Memory Code Protection bit
   501                           ;	CPD = OFF, Data EEPROM code protection off
   502                           ;	Flash Program Memory Write Enable bits
   503                           ;	WRT = OFF, Write protection off; all program memory may be written to by EECON control
   504                           ;	In-Circuit Debugger Mode bit
   505                           ;	DEBUG = 0x1, unprogrammed default
   506                           ;	Flash Program Memory Code Protection bit
   507                           ;	CP = OFF, Code protection off
   508  2007                     	org	8199
   509  2007  3F3B               	dw	16187

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         2
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      7       9
    BANK0            80      0       0
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    None.

Critical Paths under _timer1 in COMMON

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _timer1 in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _timer1 in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _timer1 in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _timer1 in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 4     0      4       0
                                              3 COMMON     4     0      4
                    _init_configbits
 ---------------------------------------------------------------------------------
 (1) _init_configbits                                      0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (2) _timer1                                               3     3      0       0
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _init_configbits

 _timer1 (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      7       9       1       64.3%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       9       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       9      12        0.0%


Microchip Technology PIC Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Fri Aug 06 12:52:57 2021

                      l31 0056                        l32 0056                        l37 005A  
                     l671 0048                       l663 003C                       l681 004D  
                     l673 0049                       l665 0041                       l683 0050  
                     l675 004A                       l667 0044                       l677 004B  
                     l669 0047                       l679 004C                      i1l26 0035  
                    _TMR1 000E                      u1_20 0028                      u1_21 0027  
                    _main 003C                      btemp 007E                      start 000C  
                   ?_main 0073                     i1l631 001B                     i1l633 0021  
                   i1l635 0028                     i1l637 0032                     i1l629 0015  
                   i1l639 0034                     _PORTB 0006                     pclath 000A  
                   status 0003                     wtemp0 007E           __initialization 000F  
            __end_of_main 005A                    ??_main 0077           _init_configbits 005A  
                  _timer1 0015                    saved_w 007E   __end_of__initialization 0011  
          __pcstackCOMMON 0070   __end_of_init_configbits 005B                __pmaintext 003C  
              __pintentry 0004                   ?_timer1 0070                   __ptext1 005A  
                 __ptext2 0015           __size_of_timer1 0027                 _T1CONbits 0010  
    end_of_initialization 0011          ?_init_configbits 0070                 _PORTBbits 0006  
               _TRISBbits 0086            __end_of_timer1 003C       start_initialization 000F  
                ??_timer1 0070               __pbssCOMMON 0077                 ___latbits 0002  
       interrupt_function 0004                  _PIE1bits 008C                  _PIR1bits 000C  
           timer1@counter 0077  __size_of_init_configbits 0001             __size_of_main 001E  
                main@argc 0073                  main@argv 0075                _INTCONbits 000B  
                intlevel1 0000         ??_init_configbits 0073  
